/*
 * Optimized Symbol & Navigation Layers for Totem
 * Keep your existing base layer - only replace SYM, NUM, and NAV layers
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define SYM  1
#define NUM  2
#define NAV  3
#define FUN  4

// Key positions for 38-key Totem
#define KEYS_L  0  1  2  3  4  5 12 13 14 15 16 17 24 25 26 27 28 29
#define KEYS_R  6  7  8  9 10 11 18 19 20 21 22 23 30 31 32 33 34 35
#define THUMBS 36 37 38 39

/ {
    keymap {
        compatible = "zmk,keymap";

        // Layer 0: BASE - KEEP YOUR EXISTING COLEMAK LAYOUT HERE
        // Don't change this - use what you're already comfortable with
        base_layer {
            bindings = <
                // Copy your existing base layer here
                // Just keep what you're already using to type with
            >;
        };

        // Layer 1: SYMBOL LAYER - Python Optimized
        symbol_layer {
            display-name = "Sym";
            bindings = <
                &kp ESC         &kp EXCL        &kp AT          &kp HASH        &kp DLLR        &kp PRCNT           &kp CARET       &kp AMPS        &kp STAR        &kp LPAR        &kp RPAR        &kp BSPC
                &trans          &kp GRAVE       &kp SQT         &kp DQT         &kp UNDER       &kp COLON           &kp EQUAL       &kp LBKT        &kp RBKT        &kp LBRC        &kp RBRC        &kp PIPE
                &trans          &kp TILDE       &kp LT          &kp GT          &kp MINUS       &kp PLUS            &kp BSLH        &kp FSLH        &kp QMARK       &kp COMMA       &kp DOT         &trans
                                                                &trans          &trans                              &kp DEL         &trans
            >;
        };

        // Layer 2: NUMBER LAYER - Easy Numpad Style
        number_layer {
            display-name = "Num";
            bindings = <
                &trans          &kp N1          &kp N2          &kp N3          &kp N4          &kp N5              &kp N6          &kp N7          &kp N8          &kp N9          &kp N0          &trans
                &trans          &kp EXCL        &kp AT          &kp HASH        &kp DLLR        &kp PRCNT           &kp PLUS        &kp N4          &kp N5          &kp N6          &kp MINUS       &kp EQUAL
                &trans          &trans          &trans          &kp CARET       &kp AMPS        &kp STAR            &kp FSLH        &kp N1          &kp N2          &kp N3          &kp DOT         &trans
                                                                &kp N0          &kp SPACE                           &trans          &kp N0
            >;
        };

        // Layer 3: NAVIGATION - LazyVim Optimized
        navigation_layer {
            display-name = "Nav";
            bindings = <
                &trans          &trans          &trans          &trans          &trans          &trans              &kp HOME        &kp PG_DN       &kp PG_UP       &kp END         &kp DEL         &trans
                &trans          &kp LGUI        &kp LALT        &kp LSHFT       &kp LCTRL       &trans              &kp LEFT        &kp DOWN        &kp UP          &kp RIGHT       &kp RET         &trans
                &trans          &kp LC(Z)       &kp LC(X)       &kp LC(C)       &kp LC(V)       &trans              &kp LC(LEFT)    &kp LC(DOWN)    &kp LC(UP)      &kp LC(RIGHT)   &kp BSPC        &trans
                                                                &trans          &kp TAB                             &kp RET         &kp DEL
            >;
        };

        // Layer 4: FUNCTION & SYSTEM
        function_layer {
            display-name = "Fn";
            bindings = <
                &trans          &kp F1          &kp F2          &kp F3          &kp F4          &kp F5              &kp F6          &kp F7          &kp F8          &kp F9          &kp F10         &trans
                &trans          &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_CLR          &kp C_PREV      &kp C_VOL_DN    &kp C_VOL_UP    &kp C_NEXT      &kp F11         &kp F12
                &trans          &out OUT_USB    &out OUT_BLE    &trans          &trans          &sys_reset          &sys_reset      &kp C_BRI_DN    &kp C_BRI_UP    &kp C_PP        &bootloader     &trans
                                                                &trans          &trans                              &trans          &trans
            >;
        };
    };

    combos {
        compatible = "zmk,combos";
        
        // Python brackets - easy to reach
        combo_parens {
            timeout-ms = <50>;
            key-positions = <19 20>;  // Home row - easy reach
            bindings = <&macro_parens>;
            layers = <BASE>;
        };
        
        combo_brackets {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&macro_brackets>;
            layers = <BASE>;
        };
        
        combo_braces {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&macro_braces>;
            layers = <BASE>;
        };

        // Python double underscore __
        combo_double_under {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&macro_double_underscore>;
            layers = <BASE>;
        };

        // Quick ESC
        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
            layers = <BASE>;
        };
    };

    macros {
        macro_parens: macro_parens {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR &kp LEFT>;
        };
        
        macro_brackets: macro_brackets {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LBKT &kp RBKT &kp LEFT>;
        };
        
        macro_braces: macro_braces {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LBRC &kp RBRC &kp LEFT>;
        };

        macro_double_underscore: macro_double_underscore {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp UNDER &kp UNDER>;
        };
    };
};
