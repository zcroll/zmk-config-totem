/*
 * TOTEM KEYBOARD - Clean & Fast Configuration
 * Optimized for smooth typing and coding
 * Simple, intuitive, no complexity
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NUM  1
#define SYM  2
#define NAV  3

#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35
#define THUMBS 36 37 38 39

/ {
    behaviors {
        // Smooth home row mods - comfortable timings
        hml: homerow_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };

        hmr: homerow_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        // Only essential combos for speed
        combo_esc {
            timeout-ms = <50>;
            key-positions = <14 15>; // R+S → ESC
            bindings = <&kp ESC>;
            require-prior-idle-ms = <150>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <15 16>; // S+T → TAB
            bindings = <&kp TAB>;
            require-prior-idle-ms = <150>;
        };

        // Brackets for coding
        combo_parens {
            timeout-ms = <50>;
            key-positions = <19 20>; // N+E → ()
            bindings = <&kp LPAR &kp RPAR &kp LEFT>;
            require-prior-idle-ms = <150>;
        };

        combo_brackets {
            timeout-ms = <50>;
            key-positions = <20 21>; // E+I → []
            bindings = <&kp LBKT &kp RBKT &kp LEFT>;
            require-prior-idle-ms = <150>;
        };

        combo_braces {
            timeout-ms = <50>;
            key-positions = <21 22>; // I+O → {}
            bindings = <&kp LBRC &kp RBRC &kp LEFT>;
            require-prior-idle-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ================================================================
        // BASE - Your Colemak-DH (clean and simple)
        // ================================================================
        base_layer {
            bindings = <
           &kp Q  &kp W           &kp F        &kp P        &kp G             &kp J                &kp L            &kp U          &kp Y            &kp SEMI
           &kp A  &hml LEFT_ALT R &hml LCTRL S &hml LSHFT T &hml LEFT_GUI D   &hmr RIGHT_COMMAND H &hmr RSHFT N     &hmr RCTRL E   &hmr RIGHT_ALT I &kp O
&kp ESC    &kp Z  &kp X           &kp C        &kp V        &kp B             &kp K                &kp M            &kp COMMA      &kp DOT          &kp FSLH  &kp TAB
                                  &mo NAV      &mo NUM      &kp BSPC          &kp SPACE            &mo SYM          &kp RET
            >;
        };

        // ================================================================
        // NUM - Numbers on home row (fastest typing)
        // ================================================================
        num_layer {
            bindings = <
           &kp N1     &kp N2     &kp N3     &kp N4     &kp N5            &kp N6     &kp N7     &kp N8     &kp N9     &kp N0
           &kp F1     &kp F2     &kp F3     &kp F4     &kp F5            &kp MINUS  &kp N4     &kp N5     &kp N6     &kp EQUAL
&trans     &kp F6     &kp F7     &kp F8     &kp F9     &kp F10           &kp PLUS   &kp N1     &kp N2     &kp N3     &kp DOT   &kp F11
                                 &trans     &trans                       &kp N0     &kp STAR
            >;
        };

        // ================================================================
        // SYM - Coding symbols (all on home row)
        // ================================================================
        sym_layer {
            bindings = <
           &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT         &kp CARET  &kp AMPS   &kp STAR   &kp LPAR   &kp RPAR
           &kp EQUAL  &kp MINUS  &kp PLUS   &kp UNDER  &kp COLON         &kp PIPE   &kp LBRC   &kp RBRC   &kp LBKT   &kp RBKT
&trans     &kp GRAVE  &kp TILDE  &kp LT     &kp GT     &kp BSLH          &kp FSLH   &kp SQT    &kp DQT    &kp QMARK  &kp SEMI  &trans
                                 &trans     &trans                       &trans     &trans
            >;
        };

        // ================================================================
        // NAV - Navigation (Vim-style arrows)
        // ================================================================
        nav_layer {
            bindings = <
           &trans     &trans     &trans     &trans     &trans            &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &kp DEL
           &kp LGUI   &kp LALT   &kp LCTRL  &kp LSHFT  &trans            &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &kp BSPC
&trans     &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &trans            &kp LC(LEFT) &kp LC(DOWN) &kp LC(UP) &kp LC(RIGHT) &kp INS &trans
                                 &trans     &trans                       &kp RET    &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        // NUM + SYM = System controls
        tri_layer {
            if-layers = <NUM SYM>;
            then-layer = <NAV>;
        };
    };
};
