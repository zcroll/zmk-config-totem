/dts-v1/;
/ {
    compatible = "zmk";
    fragment@0 {
        target-path = "/";
        __overlay__ {
            keymap {
                compatible = "zmk,keymap";

                // Layer definitions
                #define BASE 0
                #define HACK 1
                #define TERM 2
                #define TOOL 3

                // Totem 38-key positions
                #define KEYS_L  0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29
                #define KEYS_R  6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35
                #define THUMBS 36 37 38 39

                behaviors {
                    // Timeless home-row mods
                    hml: homerow_mod_left {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        flavor = "balanced";
                        tapping-term-ms = <280>;
                        quick-tap-ms = <175>;
                        require-prior-idle-ms = <150>;
                        bindings = <&kp>, <&kp>;
                        hold-trigger-key-positions = <KEYS_R THUMBS>;
                        hold-trigger-on-release;
                    };
                    hmr: homerow_mod_right {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        flavor = "balanced";
                        tapping-term-ms = <280>;
                        quick-tap-ms = <175>;
                        require-prior-idle-ms = <150>;
                        bindings = <&kp>, <&kp>;
                        hold-trigger-key-positions = <KEYS_L THUMBS>;
                        hold-trigger-on-release;
                    };

                    // Layer-tap for HACK layer
                    lt_hack: layer_tap_hack {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        flavor = "balanced";
                        tapping-term-ms = <180>;
                        quick-tap-ms = <125>;
                        global-quick-tap;
                        bindings = <&mo HACK>, <&kp>;
                    };

                    // Layer-tap for TERM layer
                    lt_term: layer_tap_term {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        flavor = "tap-preferred";
                        tapping-term-ms = <180>;
                        quick-tap-ms = <125>;
                        bindings = <&mo TERM>, <&kp>;
                    };
                };

                keymap {
                    // Layer 0: Your exact Colemak-DH base layout
                    base_layer {
                        bindings = <
           &kp Q  &kp W           &kp F        &kp P        &kp G             &kp J                &kp L            &kp U          &kp Y            &kp SEMI
           &kp A  &mt LEFT_ALT R  &mt LCTRL S  &mt LSHFT T  &mt LEFT_GUI D    &mt RIGHT_COMMAND H  &mt RSHFT N      &mt RCTRL E    &mt RIGHT_ALT I  &kp O
           &kp LCTRL  &kp Z  &kp X           &kp C        &kp V        &kp B             &kp K                &kp M            &kp COMMA      &kp DOT          &kp FSLH  &kp APOS
                                  &kp LGUI     &lt_hack HACK    &lt_term TERM    &kp SPACE            &kp RIGHT_SHIFT  &kp RIGHT_ALT
                        >;
                    };

                    // Layer 1: HACK - Penetration testing symbols & shortcuts
                    hacking_layer {
                        bindings = <
             &trans        &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT         &kp CARET     &kp AMPS      &kp STAR      &kp LPAR      &kp RPAR      &kp COLON
             &trans        &kp PIPE      &kp SQT       &kp DQT       &kp UNDER     &kp MINUS         &kp EQUAL     &kp LBKT      &kp RBKT      &kp LBRC      &kp RBRC      &kp COLON
             &trans        &kp GRAVE     &kp TILDE     &kp LT        &kp GT        &kp PLUS          &kp BSLH      &kp FSLH      &kp QMARK     &kp COMMA     &kp DOT       &kp DEL
                                                   &trans        &trans                          &trans       &trans
                        >;
                    };

                    // Layer 2: TERM - Terminal navigation & commands
                    terminal_layer {
                        bindings = <
             &trans        &kp N1        &kp N2        &kp N3        &kp N4        &kp N5            &kp N6        &kp N7        &kp N8        &kp N9        &kp N0        &trans
             &trans        &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &kp HOME          &kp END       &kp LC(A)     &kp LC(E)     &kp LC(K)     &kp LC(U)     &kp LC(W)
             &trans        &kp PG_UP     &kp PG_DN     &kp LC(LEFT)  &kp LC(RIGHT) &kp LC(HOME)      &kp LC(END)   &kp N1        &kp N2        &kp N3        &kp DOT       &kp RET
                                                   &kp N0        &kp SPACE                       &trans       &kp BSPC
                        >;
                    };

                    // Layer 3: TOOL - Security tools & system controls
                    tools_layer {
                        bindings = <
             &trans        &kp F1        &kp F2        &kp F3        &kp F4        &kp F5            &kp F6        &kp F7        &kp F8        &kp F9        &kp F10       &trans
             &trans        &kp LC(LS(T)) &kp LC(LS(I)) &kp LC(LS(R)) &kp LC(LS(P)) &kp LC(LS(S))     &kp LC(R)     &kp LC(I)     &kp LC(H)     &kp LC(G)     &kp F11       &kp F12
             &trans        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_CLR    &out OUT_USB  &sys_reset        &bootloader   &kp C_BRI_DN  &kp C_BRI_UP  &kp C_VOL_DN  &kp C_VOL_UP  &kp PC
                                                   &trans        &trans                          &trans       &trans
                        >;
                    };
                };

                combos {
                    compatible = "zmk,combos";

                    combo_parens {
                        timeout-ms = <50>;
                        key-positions = <19 20>; // N+E → ()
                        bindings = <&kp LPAR &kp RPAR &kp LEFT>;
                    };
                    combo_brackets {
                        timeout-ms = <50>;
                        key-positions = <20 21>; // E+I → []
                        bindings = <&kp LBKT &kp RBKT &kp LEFT>;
                    };
                    combo_braces {
                        timeout-ms = <50>;
                        key-positions = <21 22>; // I+O → {}
                        bindings = <&kp LBRC &kp RBRC &kp LEFT>;
                    };
                    combo_semicolon {
                        timeout-ms = <50>;
                        key-positions = <8 9>; // U+Y → ;
                        bindings = <&kp SEMI>;
                    };
                    combo_colon {
                        timeout-ms = <50>;
                        key-positions = <7 8>; // L+U → :
                        bindings = <&kp COLON>;
                    };
                    combo_equal {
                        timeout-ms = <50>;
                        key-positions = <6 7>; // J+L → =
                        bindings = <&kp EQUAL>;
                    };
                    combo_underscore {
                        timeout-ms = <50>;
                        key-positions = <28 29>; // V+B → _
                        bindings = <&kp UNDER>;
                    };
                    combo_minus {
                        timeout-ms = <50>;
                        key-positions = <27 28>; // C+V → -
                        bindings = <&kp MINUS>;
                    };
                    combo_plus {
                        timeout-ms = <50>;
                        key-positions = <31 32>; // M+comma → +
                        bindings = <&kp PLUS>;
                    };
                    combo_dunder {
                        timeout-ms = <50>;
                        key-positions = <26 27>; // C+V → __
                        bindings = <&kp UNDER &kp UNDER>;
                    };
                    combo_arrow_func {
                        timeout-ms = <50>;
                        key-positions = <33 34>; // dot+slash → =>
                        bindings = <&kp EQUAL &kp GT>;
                    };
                    combo_not_equal {
                        timeout-ms = <50>;
                        key-positions = <2 3>; // W+F → !=
                        bindings = <&kp EXCL &kp EQUAL>;
                    };
                    combo_esc {
                        timeout-ms = <50>;
                        key-positions = <14 15>; // R+S → ESC
                        bindings = <&kp ESC>;
                    };
                    combo_tab {
                        timeout-ms = <50>;
                        key-positions = <15 16>; // S+T → TAB
                        bindings = <&kp TAB>;
                    };
                    combo_copy {
                        timeout-ms = <50>;
                        key-positions = <26 29>; // C+K → Ctrl+C
                        bindings = <&kp LC(C)>;
                    };
                    combo_paste {
                        timeout-ms = <50>;
                        key-positions = <28 30>; // V+K → Ctrl+V
                        bindings = <&kp LC(V)>;
                    };
                    combo_caps_word {
                        timeout-ms = <50>;
                        key-positions = <16 20>; // T+E → caps word
                        bindings = <&caps_word>;
                    };
                };

                macros {
                    nmap_scan: nmap_scan {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp N &kp M &kp A &kp P &kp SPACE &kp MINUS &kp S &kp S &kp SPACE>;
                    };
                    netcat_cmd: netcat_cmd {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp N &kp C &kp SPACE &kp MINUS &kp L &kp V &kp N &kp P &kp SPACE>;
                    };
                    sudo_cmd: sudo_cmd {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp U &kp D &kp O &kp SPACE>;
                    };
                    home_dir: home_dir {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp D &kp SPACE &kp TILDE>;
                    };
                    parent_dir: parent_dir {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp D &kp SPACE &kp DOT &kp DOT>;
                    };
                    vim_save_quit: vim_save_quit {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp COLON &kp W &kp Q>;
                    };
                };
            };
        };
    };
};
