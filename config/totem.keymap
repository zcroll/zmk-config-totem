//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        // Layer 0: Gallium-like base (typing-focused)
        base {
            bindings = <
           &kp B   &kp L   &kp D    &kp C   &kp V     &kp J      &kp Y           &kp O          &kp U    &kp COMMA
           &kp N   &kp R   &kp S    &kp T   &kp G     &kp P      &kp H           &kp A          &kp E    &kp I
&kp LCTRL  &kp Q  &kp X  &kp M    &kp W  &kp Z     &kp K      &kp F            &kp SQT        &kp DOT  &kp FSLH  &kp APOS
                         &kp LGUI  &mo 2  &mo 1     &kp SPACE  &kp RSHFT        &kp RALT
            >;
        };

        // Layer 1: Navigation + Numbers (terminal / Neovim)
        nav_num {
            bindings = <
                   &kp LA(BSPC)   &kp BSPC   &kp UP    &kp DEL          &kp LA(DEL)        &kp N5    &kp N6      &kp N7    &kp N8   &kp N9
                   &kp LA(LEFT)   &kp LEFT   &kp DOWN  &kp RIGHT        &kp LA(RIGHT)      &kp N0    &kp N1      &kp N2    &kp N3   &kp N4
&kp LG(BSPC)  &kp LG(UP)      &kp LG(LEFT)  &kp ENTER  &kp LG(RIGHT)   &kp LG(DOWN)       &kp DOT   &kp PLUS    &kp MINUS &kp STAR &kp FSLH &kp CARET
                                                      &trans          &trans             &trans                &kp EQUAL &kp RSHFT  &kp PRCNT
            >;
        };

        // Layer 2: Symbols + Function helpers (Python/shell)
        sym_func {
            bindings = <
           &kp ESC     &kp LBRC     &kp RBRC     &none    &none      &kp F1  &kp F2   &kp F3  &kp F4  &kp F5
           &kp TAB     &kp LBKT     &kp RBKT     &kp ENTER &kp BSLH   &kp F6  &kp F7   &kp F8  &kp F9  &kp F10
&kp GRAVE  &kp LT      &kp LPAR     &kp RPAR     &kp GT    &kp UNDER  &kp F11 &kp F12  &kp F13 &kp F14 &kp F15 &kp F16
                                &trans         &trans      &trans      &none   &kp RSHFT &none
            >;
        };

        // Layer 3: Device / Media / Bluetooth management
        device {
            bindings = <
       &none        &kp C_BRI_DN     &kp C_BRI_UP     &none            &none    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
       &kp C_MUTE   &kp C_VOL_DN     &kp C_VOL_UP     &kp C_PP         &none    &none        &none         &none         &none         &none
&none   &none        &none            &none            &none    &none    &none        &none         &none         &none         &none         &bt BT_CLR
                                        &none         &none            &none    &none        &none         &none
            >;
        };

        // Reserved (expand later if needed)
        extra1 { status = "reserved"; };
        extra2 { status = "reserved"; };
        extra3 { status = "reserved"; };
    };

    // Auto-activate Device layer when both Nav (1) and Symbols (2) are held
    conditional_layers {
        compatible = "zmk,conditional-layers";
        device {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
