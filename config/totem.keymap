/*
 * Copyright (c) 2020 The ZMK Contributors
 * SPDX-License-Identifier: MIT
 * 
 * TOTEM KEYBOARD - Optimized for Comfort & Speed
 * Base: Your exact Colemak-DH layout (unchanged)
 * Navigation: Miryoku-inspired (community standard)
 * Symbols: Frequency-optimized for programming
 * Settings: Based on urob's timeless mods + community best practices
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define NUM  3
#define FUN  4

#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35
#define THUMBS 36 37 38 39

/ {
    behaviors {
        // Optimized home row mods - community proven timings
        hml: homerow_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };

        hmr: homerow_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };

        // Comfortable thumb layer taps
        lt_nav: layer_tap_nav {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            bindings = <&mo>, <&kp>;
        };

        lt_sym: layer_tap_sym {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            bindings = <&mo>, <&kp>;
        };

        // Smart shift - tap for sticky shift, double-tap for caps word
        smart_shft: smart_shift {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&sk LSHFT>, <&caps_word>;
            mods = <(MOD_LSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";
        
        // Essential combos only - prevent accidental triggers
        combo_esc {
            timeout-ms = <50>;
            key-positions = <14 15>; // R+S
            bindings = <&kp ESC>;
            require-prior-idle-ms = <150>;
            layers = <BASE>;
        };

        combo_ret {
            timeout-ms = <50>;
            key-positions = <19 20>; // N+E
            bindings = <&kp RET>;
            require-prior-idle-ms = <150>;
            layers = <BASE>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <15 16>; // S+T
            bindings = <&kp TAB>;
            require-prior-idle-ms = <150>;
            layers = <BASE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ==================================================================
        // BASE LAYER - Your exact layout (unchanged)
        // ==================================================================
        base_layer {
            label = "BASE";
            bindings = <
           &kp Q  &kp W           &kp F        &kp P        &kp G             &kp J                &kp L            &kp U          &kp Y            &kp SEMI
           &kp A  &mt LEFT_ALT R  &mt LCTRL S  &mt LSHFT T  &mt LEFT_GUI D    &mt RIGHT_COMMAND H  &mt RSHFT N      &mt RCTRL E    &mt RIGHT_ALT I  &kp O
&kp LCTRL  &kp Z  &kp X           &kp C        &kp V        &kp B             &kp K                &kp M            &kp COMMA      &kp DOT          &kp FSLH  &kp APOS
                                  &kp LGUI     &lt_nav NAV BSPC  &lt_sym SYM SPACE   &kp RET         &smart_shft      &kp RALT
            >;
        };

        // ==================================================================
        // NAV LAYER - Miryoku-inspired navigation (community standard)
        // Right hand: arrows on home row, page/home/end on top
        // Left hand: modifiers ready for combinations
        // ==================================================================
        nav_layer {
            label = "NAV";
            bindings = <
           &trans     &trans     &trans     &trans     &trans            &kp HOME   &kp PG_DN   &kp PG_UP   &kp END     &kp DEL
           &kp LGUI   &kp LALT   &kp LCTRL  &kp LSHFT  &trans            &kp LEFT   &kp DOWN    &kp UP      &kp RIGHT   &kp BSPC
&trans     &trans     &trans     &trans     &trans     &trans            &kp LC(LEFT) &kp LC(DOWN) &kp LC(UP) &kp LC(RIGHT) &kp INS  &trans
                                 &trans     &trans                       &kp RET    &kp TAB
            >;
        };

        // ==================================================================
        // SYM LAYER - Frequency-optimized for programming
        // Most used symbols on home row for minimal finger movement
        // ==================================================================
        sym_layer {
            label = "SYM";
            bindings = <
           &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT         &kp CARET  &kp AMPS   &kp STAR   &kp LPAR   &kp RPAR
           &kp COLON  &kp MINUS  &kp EQUAL  &kp UNDER  &kp PLUS          &kp PIPE   &kp LBRC   &kp RBRC   &kp LBKT   &kp RBKT
&trans     &kp GRAVE  &kp TILDE  &kp LT     &kp GT     &kp BSLH          &kp FSLH   &kp SQT    &kp DQT    &kp QMARK  &kp SEMI  &trans
                                 &trans     &trans                       &trans     &trans
            >;
        };

        // ==================================================================
        // NUM LAYER - Numbers + F-keys
        // Number row on top, numpad style on right for choice
        // ==================================================================
        num_layer {
            label = "NUM";
            bindings = <
           &kp N1     &kp N2     &kp N3     &kp N4     &kp N5            &kp N6     &kp N7     &kp N8     &kp N9     &kp N0
           &kp F1     &kp F2     &kp F3     &kp F4     &kp F5            &kp F6     &kp N4     &kp N5     &kp N6     &kp MINUS
&trans     &kp F7     &kp F8     &kp F9     &kp F10    &kp F11           &kp F12    &kp N1     &kp N2     &kp N3     &kp DOT   &trans
                                 &trans     &trans                       &kp N0     &kp EQUAL
            >;
        };

        // ==================================================================
        // FUN LAYER - System controls, media, Bluetooth
        // ==================================================================
        fun_layer {
            label = "FUN";
            bindings = <
           &none      &none      &none      &none      &none             &none      &none      &none      &none      &none
           &kp LGUI   &kp LALT   &kp LCTRL  &kp LSHFT  &none             &kp C_PREV &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT &none
&none      &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_CLR &out OUT_USB  &sys_reset &kp C_BRI_DN &kp C_BRI_UP &kp C_PP &bootloader &none
                                 &none      &none                        &none      &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        
        // Both NAV and SYM active = FUN layer
        tri_layer {
            if-layers = <NAV SYM>;
            then-layer = <FUN>;
        };
    };
};
