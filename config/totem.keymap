/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer definitions
#define BASE 0
#define SYM  1
#define NUM  2
#define NAV  3
#define FUN  4

// Key positions for 38-key Totem
//  0  1  2  3  4  5             6  7  8  9 10 11
// 12 13 14 15 16 17            18 19 20 21 22 23
// 24 25 26 27 28 29            30 31 32 33 34 35
//             36 37            38 39

#define KEYS_L  0  1  2  3  4  5 12 13 14 15 16 17 24 25 26 27 28 29
#define KEYS_R  6  7  8  9 10 11 18 19 20 21 22 23 30 31 32 33 34 35
#define THUMBS 36 37 38 39

&lt {
    tapping-term-ms = <200>;
    quick-tap-ms = <150>;
    flavor = "balanced";
};

/ {
    behaviors {
        // Home row mods - left hand
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };

        // Home row mods - right hand
        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };

        // Layer-tap for space
        lt_spc: layer_tap_space {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            bindings = <&mo>, <&kp>;
        };

        // Layer-tap for backspace
        lt_bspc: layer_tap_backspace {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            bindings = <&mo>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";
        
        // Python brackets - home row combos
        combo_parens {
            timeout-ms = <50>;
            key-positions = <19 20>;  // N+E
            bindings = <&macro_parens>;
            layers = <BASE>;
            require-prior-idle-ms = <150>;
        };
        
        combo_brackets {
            timeout-ms = <50>;
            key-positions = <20 21>;  // E+I
            bindings = <&macro_brackets>;
            layers = <BASE>;
            require-prior-idle-ms = <150>;
        };
        
        combo_braces {
            timeout-ms = <50>;
            key-positions = <21 22>;  // I+O
            bindings = <&macro_braces>;
            layers = <BASE>;
            require-prior-idle-ms = <150>;
        };

        // Python double underscore __
        combo_double_under {
            timeout-ms = <50>;
            key-positions = <27 28>;  // D+V
            bindings = <&macro_dunder>;
            layers = <BASE>;
            require-prior-idle-ms = <150>;
        };

        // Quick ESC for Vim
        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;  // W+F
            bindings = <&kp ESC>;
            layers = <BASE>;
            require-prior-idle-ms = <150>;
        };

        // Caps word for CONSTANTS
        combo_caps {
            timeout-ms = <50>;
            key-positions = <16 19>;  // T+N (home index fingers)
            bindings = <&caps_word>;
            layers = <BASE>;
        };
    };

    macros {
        // Parentheses with cursor inside
        macro_parens: macro_parens {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR &kp LEFT>;
        };
        
        // Brackets with cursor inside
        macro_brackets: macro_brackets {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LBKT &kp RBKT &kp LEFT>;
        };
        
        // Braces with cursor inside
        macro_braces: macro_braces {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LBRC &kp RBRC &kp LEFT>;
        };

        // Double underscore for __init__, __main__
        macro_dunder: macro_dunder {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp UNDER &kp UNDER>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ===================================================================
        // Layer 0: COLEMAK-DH BASE LAYER
        // ===================================================================
        base_layer {
            display-name = "Base";
            bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
             &kp TAB       &kp Q         &kp W         &kp F         &kp P         &kp B             &kp J         &kp L         &kp U         &kp Y         &kp SEMI      &kp BSLH
        // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
             &kp ESC       &hml LGUI A   &hml LALT R   &hml LSHFT S  &hml LCTRL T  &kp G             &kp M         &hmr RCTRL N  &hmr RSHFT E  &hmr LALT I   &hmr RGUI O   &kp SQT
        // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
             &kp LSHFT     &kp Z         &kp X         &kp C         &kp D         &kp V             &kp K         &kp H         &kp COMMA     &kp DOT       &kp FSLH      &kp RSHFT
        // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤                 ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                       &mo NAV       &lt_spc SYM SPACE             &lt_bspc NUM BSPC  &mo FUN
        //                                           ╰─────────────┴─────────────╯                 ╰─────────────┴─────────────╯
            >;
        };

        // ===================================================================
        // Layer 1: SYMBOL LAYER - Python Frequency Optimized
        // ===================================================================
        symbol_layer {
            display-name = "Sym";
            bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
             &trans        &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT         &kp CARET     &kp AMPS      &kp STAR      &kp LPAR      &kp RPAR      &trans
        // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
             &trans        &kp COLON     &kp SQT       &kp DQT       &kp UNDER     &kp MINUS         &kp EQUAL     &kp LBKT      &kp RBKT      &kp LBRC      &kp RBRC      &kp PIPE
        // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
             &trans        &kp GRAVE     &kp TILDE     &kp LT        &kp GT        &kp PLUS          &kp BSLH      &kp FSLH      &kp QMARK     &kp DOT       &kp COMMA     &trans
        // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤                 ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                       &trans        &trans                          &kp DEL       &trans
        //                                           ╰─────────────┴─────────────╯                 ╰─────────────┴─────────────╯
            >;
        };

        // ===================================================================
        // Layer 2: NUMBER LAYER - Numpad + Math Operators
        // ===================================================================
        number_layer {
            display-name = "Num";
            bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
             &trans        &kp N1        &kp N2        &kp N3        &kp N4        &kp N5            &kp N6        &kp N7        &kp N8        &kp N9        &kp N0        &trans
        // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
             &trans        &kp LGUI      &kp LALT      &kp LSHFT     &kp LCTRL     &kp EQUAL         &kp PLUS      &kp N4        &kp N5        &kp N6        &kp MINUS     &kp STAR
        // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
             &trans        &trans        &trans        &trans        &kp DOT       &kp COMMA         &kp FSLH      &kp N1        &kp N2        &kp N3        &kp DOT       &trans
        // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤                 ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                       &kp N0        &kp SPACE                       &trans        &kp N0
        //                                           ╰─────────────┴─────────────╯                 ╰─────────────┴─────────────╯
            >;
        };

        // ===================================================================
        // Layer 3: NAVIGATION - Vim/LazyVim Optimized
        // ===================================================================
        navigation_layer {
            display-name = "Nav";
            bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
             &trans        &trans        &trans        &trans        &trans        &trans            &kp HOME      &kp PG_DN     &kp PG_UP     &kp END       &kp DEL       &trans
        // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
             &trans        &kp LGUI      &kp LALT      &kp LSHFT     &kp LCTRL     &trans            &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &kp RET       &trans
        // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
             &trans        &kp LC(Z)     &kp LC(X)     &kp LC(C)     &kp LC(V)     &kp LC(LS(Z))     &kp LC(LEFT)  &kp LC(DOWN)  &kp LC(UP)    &kp LC(RIGHT) &kp BSPC      &trans
        // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤                 ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                       &trans        &kp TAB                         &kp RET       &kp DEL
        //                                           ╰─────────────┴─────────────╯                 ╰─────────────┴─────────────╯
            >;
        };

        // ===================================================================
        // Layer 4: FUNCTION & SYSTEM
        // ===================================================================
        function_layer {
            display-name = "Fn";
            bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
             &trans        &kp F1        &kp F2        &kp F3        &kp F4        &kp F5            &kp F6        &kp F7        &kp F8        &kp F9        &kp F10       &trans
        // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
             &trans        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR        &kp C_PREV    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT    &kp F11       &kp F12
        // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
             &trans        &out OUT_USB  &out OUT_BLE  &trans        &trans        &sys_reset        &sys_reset    &kp C_BRI_DN  &kp C_BRI_UP  &kp C_PP      &bootloader   &trans
        // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤                 ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                       &trans        &trans                          &trans        &trans
        //                                           ╰─────────────┴─────────────╯                 ╰─────────────┴─────────────╯
            >;
        };
    };
};
