/*
 * TOTEM 38-KEY LAYOUT - BUILD FIXED
 * Exactly 38 keys per layer for successful compilation
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NAV  1
#define NUM  2
#define SYM  3
#define FN   4
#define SYS  5

// Totem 38-key positions
#define KEYS_L 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24
#define KEYS_R 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29
#define THUMBS 30 31 32 33 34 35 36 37

#define QUICK_TAP_MS 175

/ {
    behaviors {
        // Homerow mods with conservative timing
        hml: homerow_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <QUICK_TAP_MS>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };

        hmr: homerow_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <QUICK_TAP_MS>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };

        // Layer-tap for thumbs
        lt_spc: layer_tap_space {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <QUICK_TAP_MS>;
            bindings = <&mo>, <&kp>;
        };

        // Smart shift behavior
        smart_shft: smart_shift {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&sk LSHFT>, <&caps_word>;
            mods = <(MOD_LSFT)>;
        };

        // Smart punctuation
        comma_morph: comma_morph {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMI>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dot_morph: dot_morph {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        qexcl: question_exclamation {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp QMARK>, <&kp EXCL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        // Essential combos in easy reach
        combo_esc {
            key-positions = <1 2>;
            bindings = <&kp ESC>;
            timeout-ms = <50>;
        };

        combo_tab {
            key-positions = <11 12>;
            bindings = <&kp TAB>;
            timeout-ms = <50>;
        };

        combo_enter {
            key-positions = <17 18>;
            bindings = <&kp RET>;
            timeout-ms = <50>;
        };

        // Brackets for programming
        combo_lpar {
            key-positions = <15 16>;
            bindings = <&kp LPAR>;
            timeout-ms = <50>;
        };

        combo_rpar {
            key-positions = <16 17>;
            bindings = <&kp RPAR>;
            timeout-ms = <50>;
        };

        combo_lbkt {
            key-positions = <25 26>;
            bindings = <&kp LBKT>;
            timeout-ms = <50>;
        };

        combo_rbkt {
            key-positions = <26 27>;
            bindings = <&kp RBKT>;
            timeout-ms = <50>;
        };

        combo_lbrc {
            key-positions = <27 28>;
            bindings = <&kp LBRC>;
            timeout-ms = <50>;
        };

        combo_rbrc {
            key-positions = <28 29>;
            bindings = <&kp RBRC>;
            timeout-ms = <50>;
        };

        // Common shortcuts
        combo_copy {
            key-positions = <21 22>;
            bindings = <&kp LC(C)>;
            timeout-ms = <50>;
        };

        combo_paste {
            key-positions = <22 23>;
            bindings = <&kp LC(V)>;
            timeout-ms = <50>;
        };

        combo_cut {
            key-positions = <20 22>;
            bindings = <&kp LC(X)>;
            timeout-ms = <50>;
        };

        combo_undo {
            key-positions = <20 21>;
            bindings = <&kp LC(Z)>;
            timeout-ms = <50>;
        };

        combo_save {
            key-positions = <12 23>;
            bindings = <&kp LC(S)>;
            timeout-ms = <50>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // BASE LAYER - Exactly 38 keys
        base_layer {
            bindings = <
        // Row 1: 10 keys (0-9)
             &kp Q         &kp W            &kp F         &kp P         &kp G              &kp J                 &kp L         &kp U         &kp Y             &kp SQT
        // Row 2: 10 keys (10-19)
             &kp A         &hml LALT R      &hml LCTRL S  &hml LSHFT T  &hml LGUI D        &hmr LGUI H           &hmr RSHFT N  &hmr RCTRL E  &hmr LALT I       &kp O
        // Row 3: 10 keys (20-29)
             &kp Z         &kp X            &kp C         &kp V         &kp B              &kp K                 &kp M         &comma_morph  &dot_morph        &qexcl
        // Thumbs: 8 keys (30-37) = Total 38 keys
                                            &mo NAV       &kp BSPC      &mo FN             &lt_spc NUM SPACE     &mo SYM       &smart_shft   &kp DEL           &kp RET
            >;
        };

        // NAVIGATION LAYER - Exactly 38 keys
        nav_layer {
            bindings = <
             &kp LA(F4)    &trans           &kp LS(TAB)   &kp TAB       &trans             &kp PG_UP             &kp HOME      &kp UP        &kp END           &kp INS
             &sk LGUI      &sk LALT         &sk LSHFT     &sk LCTRL     &trans             &kp PG_DN             &kp LEFT      &kp DOWN      &kp RIGHT         &kp RET
             &trans        &trans           &trans        &trans        &trans             &kp CAPS              &kp LC(LEFT)  &kp LC(DOWN)  &kp LC(RIGHT)     &kp DEL
                                            &trans        &trans        &trans             &trans                &trans        &kp K_CANCEL  &trans            &trans
            >;
        };

        // NUMBER LAYER - Exactly 38 keys
        num_layer {
            bindings = <
             &kp N1        &kp N2           &kp N3        &kp N4        &kp N5             &kp N6                &kp N7        &kp N8        &kp N9            &kp N0
             &hml LGUI N0  &hml LALT N4     &hml LCTRL N5 &hml LSHFT N6 &kp PLUS           &kp EQUAL             &hmr RSHFT N4 &hmr RCTRL N5 &hmr LALT N6      &kp DOT
             &kp COMMA     &kp N1           &kp N2        &kp N3        &kp STAR           &kp FSLH              &kp N1        &kp N2        &kp N3            &kp MINUS
                                            &trans        &trans        &trans             &trans                &trans        &trans        &trans            &trans
            >;
        };

        // SYMBOL LAYER - Exactly 38 keys
        sym_layer {
            bindings = <
             &kp EXCL      &kp AT           &kp HASH      &kp DLLR      &kp PRCNT          &kp CARET             &kp AMPS      &kp STAR      &kp LPAR          &kp RPAR
             &kp GRAVE     &kp MINUS        &kp PLUS      &kp EQUAL     &kp COLON          &kp PIPE              &kp LBRC      &kp RBRC      &kp LBKT          &kp RBKT
             &kp TILDE     &kp UNDER        &kp BSLH      &kp FSLH      &kp SEMI           &kp LT                &kp GT        &kp SQT       &kp DQT           &kp QMARK
                                            &trans        &trans        &trans             &trans                &trans        &trans        &trans            &trans
            >;
        };

        // FUNCTION LAYER - Exactly 38 keys
        fn_layer {
            bindings = <
             &kp F12       &kp F7           &kp F8        &kp F9        &kp PRINTSCREEN    &kp C_VOL_UP          &kp C_PREV    &kp C_PP      &kp C_NEXT        &kp C_BRI_UP
             &kp F11       &kp F4           &kp F5        &kp F6        &kp SCROLLLOCK     &kp C_VOL_DN          &kp C_MUTE    &trans        &trans            &kp C_BRI_DN
             &kp F10       &kp F1           &kp F2        &kp F3        &kp PAUSE_BREAK    &trans                &trans        &trans        &trans            &trans
                                            &trans        &trans        &trans             &trans                &trans        &trans        &trans            &trans
            >;
        };

        // SYSTEM LAYER - Exactly 38 keys
        sys_layer {
            bindings = <
             &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR         &trans                &trans        &trans        &trans            &trans
             &out OUT_USB  &out OUT_BLE     &trans        &trans        &trans             &trans                &trans        &trans        &trans            &trans
             &trans        &trans           &trans        &bootloader   &sys_reset         &sys_reset            &bootloader   &trans        &trans            &trans
                                            &trans        &trans        &trans             &trans                &trans        &trans        &trans            &trans
            >;
        };
    };

    // Conditional layers
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <FN NUM>;
            then-layer = <SYS>;
        };
    };
};
