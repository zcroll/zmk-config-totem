/*
 * CYBERSECURITY TOTEM CONFIGURATION - Using YOUR Exact Colemak-DH Base
 * Layer 0 is verbatim as provided; Layers 1–4 add cybersecurity and tool shortcuts.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer definitions
#define BASE 0
#define HACK 1  // Hacking symbols & shortcuts
#define TERM 2  // Terminal commands & navigation
#define TOOL 3  // Security tools & system
#define REPT 4  // Reporting & documentation

// Totem 38-key positions
#define KEYS_L  0  1  2  3  4  5 12 13 14 15 16 17 24 25 26 27 28 29
#define KEYS_R  6  7  8  9 10 11 18 19 20 21 22 23 30 31 32 33 34 35
#define THUMBS 36 37 38 39

/ {
    behaviors {
        // Timeless home-row mods
        hml: homerow_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };
        hmr: homerow_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };

        // Layer-tap for HACK layer (fast)
        lt_hack: layer_tap_hack {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <180>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&mo>, <&kp>;
        };

        // Layer-tap for TERM layer
        lt_term: layer_tap_terminal {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <180>;
            quick-tap-ms = <125>;
            bindings = <&mo>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        // HACK LAYER SYMBOLS
        combo_pipe {
            timeout-ms = <50>;
            key-positions = <19 20>; // N+E → |
            bindings = <&kp PIPE>;
        };
        combo_amp {
            timeout-ms = <50>;
            key-positions = <20 21>; // E+I → &
            bindings = <&kp AMPS>;
        };
        combo_lt {
            timeout-ms = <50>;
            key-positions = <7 8>; // L+U → <
            bindings = <&kp LT>;
        };
        combo_gt {
            timeout-ms = <50>;
            key-positions = <8 9>; // U+Y → >
            bindings = <&kp GT>;
        };

        // PENTESTING COMMANDS
        combo_nmap {
            timeout-ms = <50>;
            key-positions = <26 27>; // C+V → nmap -sS 
            bindings = <&nmap_scan>;
        };
        combo_nc {
            timeout-ms = <50>;
            key-positions = <18 19>; // H+N → nc -lvnp 
            bindings = <&netcat_cmd>;
        };
        combo_sudo {
            timeout-ms = <50>;
            key-positions = <6 7>; // J+L → sudo 
            bindings = <&sudo_cmd>;
        };

        // TERMINAL NAVIGATION
        combo_cd_home {
            timeout-ms = <50>;
            key-positions = <2 3>; // W+F → cd ~
            bindings = <&home_dir>;
        };
        combo_cd_up {
            timeout-ms = <50>;
            key-positions = <3 4>; // F+P → cd ..
            bindings = <&parent_dir>;
        };

        // VIM SHORTCUTS
        combo_esc {
            timeout-ms = <50>;
            key-positions = <14 15>; // R+S → ESC
            bindings = <&kp ESC>;
        };
        combo_wq {
            timeout-ms = <50>;
            key-positions = <15 16>; // S+T → :wq
            bindings = <&vim_save_quit>;
        };
    };

    macros {
        nmap_scan: nmap_scan {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N &kp M &kp A &kp P &kp SPACE &kp MINUS &kp S &kp S &kp SPACE>;
        };
        netcat_cmd: netcat_cmd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N &kp C &kp SPACE &kp MINUS &kp L &kp V &kp N &kp P &kp SPACE>;
        };
        sudo_cmd: sudo_cmd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp U &kp D &kp O &kp SPACE>;
        };
        home_dir: home_dir {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp D &kp SPACE &kp TILDE>;
        };
        parent_dir: parent_dir {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp D &kp SPACE &kp DOT &kp DOT>;
        };
        vim_save_quit: vim_save_quit {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp W &kp Q>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
           &kp Q  &kp W           &kp F        &kp P        &kp G             &kp J                &kp L            &kp U          &kp Y            &kp SEMI
           &kp A  &mt LEFT_ALT R  &mt LCTRL S  &mt LSHFT T  &mt LEFT_GUI D    &mt RIGHT_COMMAND H  &mt RSHFT N      &mt RCTRL E    &mt RIGHT_ALT I  &kp O
&kp LCTRL  &kp Z  &kp X           &kp C        &kp V        &kp B             &kp K                &kp M            &kp COMMA      &kp DOT          &kp FSLH  &kp APOS
                                  &kp LGUI     &lt_hack HACK    &lt_term TERM    &kp SPACE            &kp RIGHT_SHIFT  &kp RIGHT_ALT
            >;
        };

        hacking_layer {
            display-name = "Hack";
            bindings = <
             &trans        &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT         &kp CARET     &kp AMPS      &kp STAR      &kp LPAR      &kp RPAR      &trans
             &trans        &kp PIPE      &kp SQT       &kp DQT       &kp UNDER     &kp MINUS         &kp EQUAL     &kp LBKT      &kp RBKT      &kp LBRC      &kp RBRC      &kp COLON
             &trans        &kp GRAVE     &kp TILDE     &kp LT        &kp GT        &kp PLUS          &kp BSLH      &kp FSLH      &kp QMARK     &kp COMMA     &kp DOT       &trans
                                                   &trans        &trans                          &kp DEL       &trans
            >;
        };

        terminal_layer {
            display-name = "Term";
            bindings = <
             &trans        &kp N1        &kp N2        &kp N3        &kp N4        &kp N5            &kp N6        &kp N7        &kp N8        &kp N9        &kp N0        &trans
             &trans        &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &kp HOME          &kp END       &kp LC(A)     &kp LC(E)     &kp LC(K)     &kp LC(U)     &kp LC(W)
             &trans        &kp PG_UP     &kp PG_DN     &kp LC(LEFT)  &kp LC(RIGHT) &kp LC(HOME)      &kp LC(END)   &kp N1        &kp N2        &kp N3        &kp DOT       &trans
                                                   &kp N0        &kp SPACE                       &trans        &kp RET
            >;
        };

        tools_layer {
            display-name = "Tool";
            bindings = <
             &trans        &kp F1        &kp F2        &kp F3        &kp F4        &kp F5            &kp F6        &kp F7        &kp F8        &kp F9        &kp F10       &trans
             &trans        &kp LC(T)     &kp LC(B)     &kp LC(P)     &kp LC(S)     &kp LC(R)         &kp LC(G)     &kp LC(I)     &kp LC(H)     &kp LC(G)     &kp F11       &kp F12
             &trans        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_CLR    &out OUT_USB  &sys_reset        &bootloader   &kp C_BRI_DN  &kp C_BRI_UP  &kp C_VOL_DN  &kp C_VOL_UP  &trans
                                                   &trans        &trans                          &trans        &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <HACK TERM>;
            then-layer = <TOOL>;
        };
    };
};
