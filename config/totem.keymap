#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define HYPR 3
#define ADJ  4

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        base_layer {
            label = "BASE";
            bindings = <
                &kp Q       &kp W       &kp F       &kp P       &kp G           &kp J       &kp L       &kp U       &kp Y       &kp SEMI
                &mt LGUI A  &mt LALT R  &mt LCTRL S &mt LSHFT T &kp D           &kp H       &mt RSHFT N &mt RCTRL E &mt RALT I  &mt RGUI O
                &kp Z       &kp X       &kp C       &kp V       &kp B           &kp K       &kp M       &kp COMMA   &kp DOT     &kp FSLH
                                        &kp TAB     &lt HYPR LGUI &lt NAV SPACE &lt SYM RET &kp BSPC    &kp ESC
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        nav_layer {
            label = "NAV";
            bindings = <
                &kp ESC     &kp PG_UP   &kp UP      &kp PG_DN   &kp HOME        &kp KP_MULTIPLY &kp N7  &kp N8      &kp N9      &kp KP_PLUS
                &kp LSHFT   &kp LEFT    &kp DOWN    &kp RIGHT   &kp END         &kp KP_DIVIDE   &kp N4  &kp N5      &kp N6      &kp KP_MINUS
                &kp LCTRL   &kp LC(Z)   &kp LC(X)   &kp LC(C)   &kp LC(V)       &kp N0          &kp N1  &kp N2      &kp N3      &kp EQUAL
                                        &trans      &trans      &trans          &mo ADJ         &kp DEL &kp CAPS
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        sym_layer {
            label = "SYM";
            bindings = <
                &kp EXCL    &kp AT      &kp HASH    &kp DLLR    &kp PRCNT       &kp CARET   &kp AMPS    &kp ASTRK   &kp LPAR    &kp RPAR
                &kp GRAVE   &kp TILDE   &kp PIPE    &kp UNDER   &kp MINUS       &kp PLUS    &kp EQUAL   &kp LBKT    &kp RBKT    &kp BSLH
                &kp SQT     &kp DQT     &kp LT      &kp GT      &kp QMARK       &kp COLON   &kp LBRC    &kp RBRC    &kp DOT     &kp FSLH
                                        &trans      &trans      &mo ADJ         &trans      &trans      &trans
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        hypr_layer {
            label = "HYPR";
            bindings = <
                &kp LG(Q)       &kp LG(W)       &kp LG(UP)      &kp LG(P)       &kp LG(G)           &kp LG(J)       &kp LG(N7)      &kp LG(N8)      &kp LG(N9)      &kp LG(N0)
                &kp LG(A)       &kp LG(LEFT)    &kp LG(DOWN)    &kp LG(RIGHT)   &kp LG(D)           &kp LG(H)       &kp LG(N4)      &kp LG(N5)      &kp LG(N6)      &kp LG(O)
                &kp LG(Z)       &kp LG(X)       &kp LG(C)       &kp LG(V)       &kp LG(B)           &kp LC(LA(T))   &kp LG(N1)      &kp LG(N2)      &kp LG(N3)      &kp LG(ENTER)
                                                &kp LG(TAB)     &trans          &kp LG(SPACE)       &kp LG(RET)     &kp LG(BSPC)    &kp PRINTSCREEN
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        adj_layer {
            label = "ADJ";
            bindings = <
                &sys_reset  &bt BT_CLR  &out OUT_TOG &trans      &trans          &kp F12     &kp F7      &kp F8      &kp F9      &kp C_VOL_UP
                &bootloader &bt BT_NXT  &trans       &trans      &trans          &kp F11     &kp F4      &kp F5      &kp F6      &kp C_VOL_DN
                &trans      &bt BT_PRV  &trans       &trans      &trans          &kp F10     &kp F1      &kp F2      &kp F3      &kp C_MUTE
                                        &trans       &trans      &trans          &trans      &trans      &trans
            >;
        };
    };
};
